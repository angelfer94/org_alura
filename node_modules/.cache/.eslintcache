[{"D:\\Alura - Front End\\org\\src\\index.js":"1","D:\\Alura - Front End\\org\\src\\reportWebVitals.js":"2","D:\\Alura - Front End\\org\\src\\App.js":"3","D:\\Alura - Front End\\org\\src\\componentes\\Header\\Header.js":"4","D:\\Alura - Front End\\org\\src\\componentes\\Formulario\\Formulario.js":"5","D:\\Alura - Front End\\org\\src\\componentes\\ListaOpciones\\index.js":"6","D:\\Alura - Front End\\org\\src\\componentes\\Boton\\index.js":"7","D:\\Alura - Front End\\org\\src\\componentes\\MiOrg\\index.js":"8","D:\\Alura - Front End\\org\\src\\componentes\\Equipo\\index.js":"9","D:\\Alura - Front End\\org\\src\\componentes\\Colaborador\\index.js":"10","D:\\Alura - Front End\\org\\src\\componentes\\Footer\\index.jsx":"11","D:\\Alura - Front End\\org\\src\\componentes\\Campo\\index.js":"12"},{"size":535,"mtime":1690860285092,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1690860285277,"results":"15","hashOfConfig":"14"},{"size":4923,"mtime":1691812218289,"results":"16","hashOfConfig":"14"},{"size":184,"mtime":1690949840379,"results":"17","hashOfConfig":"14"},{"size":2607,"mtime":1691731216188,"results":"18","hashOfConfig":"14"},{"size":742,"mtime":1691469062847,"results":"19","hashOfConfig":"14"},{"size":140,"mtime":1691202010135,"results":"20","hashOfConfig":"14"},{"size":632,"mtime":1691285040599,"results":"21","hashOfConfig":"14"},{"size":1360,"mtime":1691811091662,"results":"22","hashOfConfig":"14"},{"size":888,"mtime":1691811141665,"results":"23","hashOfConfig":"14"},{"size":758,"mtime":1691641547850,"results":"24","hashOfConfig":"14"},{"size":666,"mtime":1691731150095,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"tq3gur",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"29"},"D:\\Alura - Front End\\org\\src\\index.js",[],[],[],"D:\\Alura - Front End\\org\\src\\reportWebVitals.js",[],[],"D:\\Alura - Front End\\org\\src\\App.js",[],[],"D:\\Alura - Front End\\org\\src\\componentes\\Header\\Header.js",[],[],"D:\\Alura - Front End\\org\\src\\componentes\\Formulario\\Formulario.js",["68"],[],"import { useState } from \"react\"\r\nimport \"./Formulario.css\"\r\nimport Campo from \"../Campo\"\r\nimport ListaOpciones from \"../ListaOpciones\"\r\nimport Boton from \"../Boton\"\r\n\r\nconst Formulario = (props) => {\r\n\r\n\r\n    const [nombre,actualizarNombre] = useState(\"\")\r\n    const [puesto,actualizarPuesto] = useState(\"\")\r\n    const [foto,actualizarFoto] = useState(\"\")\r\n    const [equipo, actualizarEquipo] = useState(\"\")\r\n\r\n    const [titulo, actualizarTitulo] = useState(\"\")\r\n    const [color, actualizarColor] = useState(\"\")\r\n\r\n    const {registrarColaborador, crearEquipo} = props\r\n\r\nconst manejarEnvio = (event) => {\r\n    event.preventDefault()\r\n    console.log(\"Manejar el envi贸\")\r\n    let datosAEnviar = {\r\n        nombre,\r\n        puesto,\r\n        foto,\r\n        equipo\r\n    }\r\n    props.registrarColaborador(datosAEnviar)\r\n}\r\n\r\nconst manejarNuevoEquipo = (e) => {\r\n    e.preventDefault()\r\n    crearEquipo({ titulo, colorPrimario: color })\r\n}\r\n\r\n\r\n    return <section className=\"formulario\">\r\n        <form onSubmit={manejarEnvio}>\r\n            <h2>Rellena el formulario para crear el colaborador.</h2>\r\n        <Campo \r\n            titulo=\"Nombre\"\r\n            placeholder=\"Ingresar nombre\" required \r\n            valor= {nombre} \r\n            actualizarValor= {actualizarNombre} \r\n        />\r\n        <Campo \r\n            titulo=\"Puesto\"  \r\n            placeholder=\"Ingresar puesto\" required\r\n            valor= {puesto} \r\n            actualizarValor= {actualizarPuesto} \r\n        />\r\n        <Campo \r\n            titulo=\"Foto\"  \r\n            placeholder=\"Ingresar enlace de foto\" required\r\n            valor= {foto} \r\n            actualizarValor= {actualizarFoto} \r\n        />\r\n            <ListaOpciones \r\n                valor= {equipo} \r\n                actualizarEquipo = {actualizarEquipo}\r\n                equipos= {props.equipos}\r\n            />\r\n            <Boton>\r\n                Crear\r\n            </Boton>\r\n        </form>\r\n        <form onSubmit={manejarNuevoEquipo}>\r\n            <h2>Rellena el formulario para crear el equipo.</h2>\r\n        <Campo \r\n            titulo=\"Titulo\"\r\n            placeholder=\"Ingresar titulo\" required \r\n            valor= {titulo} \r\n            actualizarValor= {actualizarTitulo} \r\n        />\r\n        <Campo \r\n            titulo=\"Color\"  \r\n            placeholder=\"Ingresar el color en Hex\" required\r\n            valor= {color} \r\n            actualizarValor= {actualizarColor} \r\n            type=\"color\"\r\n        />\r\n\r\n            <Boton>\r\n                Registrar Equipo\r\n            </Boton> \r\n        </form>\r\n    </section>\r\n}\r\n\r\nexport default Formulario","D:\\Alura - Front End\\org\\src\\componentes\\ListaOpciones\\index.js",[],[],"D:\\Alura - Front End\\org\\src\\componentes\\Boton\\index.js",[],[],"D:\\Alura - Front End\\org\\src\\componentes\\MiOrg\\index.js",["69"],[],"import { useState } from \"react\"\r\nimport \"./MiOrg.css\"\r\n\r\nconst MiOrg = (props) => {\r\n    //Estado - hooks\r\n    //useState  \r\n    //const [nombreVariable, funci贸nActualiza] = useState(valorInicial)\r\n    console.log(props)\r\n  //  const [mostrar,actualizarMostrar] = useState(true)\r\n  //  const manejarClick =() => {\r\n  //  console.log (\"mostrar/ocultar elemento\", !mostrar)\r\n  //  actualizarMostrar(!mostrar)\r\n  //  }\r\n\r\n    return <section className=\"orgSection\">\r\n        <h3 className=\"title\">Mi organizaci贸n</h3>\r\n        <img src=\"add.png\" alt=\"add\" onClick={props.cambiarMostrar} />\r\n    </section>\r\n}\r\n\r\nexport default MiOrg","D:\\Alura - Front End\\org\\src\\componentes\\Equipo\\index.js",["70"],[],"import \"./Equipo.css\"\r\nimport Colaborador from \"../Colaborador\"\r\nimport hexToRgba from 'hex-to-rgba';\r\n\r\nconst Equipo = (props) => {\r\n    //Destructuracion\r\n    const { colorPrimario, colorSecundario, titulo, id } = props.datos\r\n    const {colaboradores, eliminarColaborador, actualizarColor, like} = props\r\n    const obj = {\r\n        backgroundColor: hexToRgba(colorPrimario, 0.6)\r\n    }\r\n    \r\n\r\n    const estiloTitulo = { borderColor: colorPrimario}\r\n\r\n\r\n    return <>\r\n    {  colaboradores.length > 0 &&\r\n              <section className=\"equipo\" style={obj}>\r\n                <input \r\n                    type='color'\r\n                    className=\"input-color\"\r\n                    value={colorPrimario}\r\n                    onChange={(evento) => {\r\n                        actualizarColor(evento.target.value, id)\r\n                    }}\r\n                />\r\n                <h3 style={estiloTitulo}> {titulo} </h3>\r\n                <div className=\"coloboradores\">\r\n        {\r\n            colaboradores.map( (colaborador,index) => <Colaborador \r\n                datos={colaborador} \r\n                key={index} \r\n                colorPrimario = {colorPrimario} \r\n                eliminarColaborador = {eliminarColaborador}\r\n                like={like}\r\n            /> )\r\n        }\r\n\r\n\r\n    </div>\r\n</section>\r\n\r\n}\r\n</>\r\n} \r\n\r\n\r\n\r\nexport default Equipo","D:\\Alura - Front End\\org\\src\\componentes\\Colaborador\\index.js",["71"],[],"import \"./Colaborador.css\"\r\nimport { AiFillCloseCircle, AiFillHeart, AiOutlineHeart } from \"react-icons/ai\"\r\n\r\nconst Colaborador = (props) => {\r\n    const { nombre,puesto,foto,equipo, id, fav } = props.datos\r\n    const {colorPrimario, eliminarColaborador, like } = props\r\n\r\n//condici贸n ? verdadero : false\r\n\r\n    return <div className=\"colaborador\">\r\n        <AiFillCloseCircle className=\"eliminar\" onClick={() => eliminarColaborador(id)}/>\r\n        <div className=\"encabezado\" style={{backgroundColor: colorPrimario}}> \r\n            <img src={foto} alt={nombre} />\r\n        </div>\r\n        <div className=\"info\">\r\n            <h4> {nombre} </h4>\r\n            <h5>{puesto}</h5>\r\n            {fav ? <AiFillHeart color=\"red\" onClick={() => like(id)}/> : <AiOutlineHeart onClick={() => like(id)} />  }\r\n            \r\n            \r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Colaborador","D:\\Alura - Front End\\org\\src\\componentes\\Footer\\index.jsx",[],[],"D:\\Alura - Front End\\org\\src\\componentes\\Campo\\index.js",["72"],[],"import { useState } from \"react\"\r\nimport \"./Campo.css\"\r\n\r\nconst Campo = (props) => {\r\n    const placeholderModificador = `${props.placeholder}...`\r\n\r\n\r\n    //Destructuracion\r\n    const { type =\"text\" } = props\r\n\r\n    \r\n    const manejarCambio = (e) => {\r\n        props.actualizarValor(e.target.value)\r\n    }\r\n    \r\n    return <div className={`campo campo-${type}`}>\r\n        <label>{props.titulo}</label>\r\n        <input \r\n            placeholder={placeholderModificador} \r\n            required={props.required} \r\n            value={props.valor}\r\n            onChange = {manejarCambio}\r\n            type={type}\r\n        />\r\n         </div>\r\n}\r\n\r\nexport default Campo",{"ruleId":"73","severity":1,"message":"74","line":18,"column":12,"nodeType":"75","messageId":"76","endLine":18,"endColumn":32},{"ruleId":"73","severity":1,"message":"77","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":18},{"ruleId":"73","severity":1,"message":"78","line":7,"column":28,"nodeType":"75","messageId":"76","endLine":7,"endColumn":43},{"ruleId":"73","severity":1,"message":"79","line":5,"column":32,"nodeType":"75","messageId":"76","endLine":5,"endColumn":38},{"ruleId":"73","severity":1,"message":"77","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":18},"no-unused-vars","'registrarColaborador' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'colorSecundario' is assigned a value but never used.","'equipo' is assigned a value but never used."]